  # Populate certain fields using Genbank XML  
  module btvGenbankXmlPopulator populate -w "source.name = 'ncbi-curated'"
  module btvGenbankXmlPopulator update join-table-links -w "source.name = 'ncbi-curated'"

  # populate gb_serotype: serotype as indicated in the GenBank record
  module btvGenbankXmlSerotypePopulator populate -w "source.name = 'ncbi-curated'"

  # this adds gb_length and isolate_segment to the outgroup sequences
  module btvGenbankXmlReferencePopulator populate -w "source.name in ('ncbi-outgroup', 'ncbi-refseqs', 'ncbi-s2-refseqs')"

  # Note that in PATAV, segments 7 and 8 are reversed due to slightly different lengths.
  # Here we will keep the segment names the same as for BTV, i.e. S7 == VP7, S8 == NS2
  sequence ncbi-outgroup JQ070393 set field isolate_segment 7
  sequence ncbi-outgroup JQ070392 set field isolate_segment 8

  # Non-patent related sequences
  multi-set field sequence -w "gb_patent_related = null" gb_patent_related false

  # populate 'excluded' / excluded reason field for certain sequences from a text file
  run script glue/btvExcludedSequences.js 

  # all patent related sequences are excluded
  multi-set field sequence -w "gb_patent_related = true" excluded true
  multi-set field sequence -w "gb_patent_related = true" excluded_reason "Patent-related"

  # set false rather than null value for non-excluded fields
  multi-set field sequence -w "excluded = null" excluded false

  # load isolate data / metadata. As a side effect, isolate_segment on sequence table is populated.
  run script glue/btvLoadIsolates.js

  # derive alt-names for isolates
  run script glue/btvSetIsolateAltNames.js

  # "complete segment" field on sequences
  run file glue/populateCompleteSegmentField.glue
  
  # "complete genome" field on isolates
  run script glue/populateCompleteGenomeField.js
  